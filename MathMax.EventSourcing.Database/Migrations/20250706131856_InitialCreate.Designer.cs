// <auto-generated />
using System;
using MathMax.EventSourcing.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MathMax.EventSourcing.Database.Migrations
{
    [DbContext(typeof(EventContext))]
    [Migration("20250706131856_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MathMax.EventSourcing.Entity.Event", b =>
                {
                    b.Property<byte[]>("UniqueId")
                        .HasColumnType("bytea")
                        .HasColumnName("unique_id");

                    b.Property<Guid?>("AggregateId")
                        .HasColumnType("uuid")
                        .HasColumnName("aggregate_id");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("event_type");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("payload");

                    b.Property<string>("ReadableId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("readable_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamptz")
                        .HasColumnName("timestamp");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("UniqueId");

                    b.HasIndex("AggregateId", "Version")
                        .IsUnique();

                    b.ToTable("events", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
